// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int        @id @default(autoincrement())
  email    String     @unique
  password String
  name     String
  Age      Int?
  listings Listing[]
  bookings Booking[]
  Wishlist Wishlist[]
}

model Listing {
  id          Int        @id @default(autoincrement())
  title       String
  description String?
  images      Image[]
  location    String
  latitude    Float?
  longitude   Float?
  price       Float
  user        User       @relation(fields: [userId], references: [id])
  userId      Int
  bookings    Booking[]
  Wishlist    Wishlist[]
}

model Image {
  id        Int     @id @default(autoincrement())
  url       String
  listing   Listing @relation(fields: [listingId], references: [id])
  listingId Int
}

model Booking {
  id        Int      @id @default(autoincrement())
  startDate DateTime
  endDate   DateTime
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  listing   Listing  @relation(fields: [listingId], references: [id])
  listingId Int
}

model Wishlist {
  id        Int     @id @default(autoincrement())
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
  listing   Listing @relation(fields: [listingId], references: [id])
  listingId Int

  @@unique([userId, listingId]) // No duplicates
}
